ext {
    junitVersion = project.hasProperty('junitVersion') ? rootProject.ext.junitVersion : '4.13.1'
    androidxAppCompatVersion = project.hasProperty('androidxAppCompatVersion') ? rootProject.ext.androidxAppCompatVersion : '1.2.0'
    androidxJunitVersion = project.hasProperty('androidxJunitVersion') ? rootProject.ext.androidxJunitVersion : '1.1.2'
    androidxEspressoCoreVersion = project.hasProperty('androidxEspressoCoreVersion') ? rootProject.ext.androidxEspressoCoreVersion : '3.3.0'
}

buildscript {
    ext.kotlin_version = '1.5.21'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion project.hasProperty('compileSdkVersion') ? rootProject.ext.compileSdkVersion : 30
    defaultConfig {
        minSdkVersion project.hasProperty('minSdkVersion') ? rootProject.ext.minSdkVersion : 21
        targetSdkVersion project.hasProperty('targetSdkVersion') ? rootProject.ext.targetSdkVersion : 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    google()
    jcenter()
    mavenCentral()
}

def testRunner = "1.4.0"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':capacitor-android')

    testImplementation 'org.mockito:mockito-inline:3.6.28'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.27.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.2"
    // https://medium.com/google-developer-experts/pushing-the-limits-of-androidx-test-3776ff249c71
    testImplementation "androidx.test:core:$testRunner"
    testImplementation "androidx.test:runner:$testRunner"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.3.2"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.3.2"
    testImplementation 'org.json:json:20200518'
    // We do not need expresso tests here... or?
    //    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    //    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"

	// after 20.5.0, require minCompileSdk (31)
    implementation 'com.google.android.gms:play-services-ads:21.5.0'
    // workaround flag_immutable error 
    implementation 'androidx.work:work-runtime:2.7.0'
    
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.1.0"
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

// Allow to run unit test with  ./gradlew test
tasks.withType(Test) {
    useJUnitPlatform()
}
